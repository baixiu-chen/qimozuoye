{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2ca08fd4-c508-4351-9c79-1d48af79669f",
   "source": [
    "记账本网站搭建"
   ]
  },
  {
   "cell_type": "code",
   "id": "ae3373ad-6aeb-4229-b621-62e17039d66a",
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from datetime import datetime\n",
    "import streamlit as st\n",
    "\n",
    "# 设置页面\n",
    "st.set_page_config(page_title=\"月光族记账本\", page_icon=\"💰\", layout=\"wide\")\n",
    "\n",
    "# 初始化数据\n",
    "if 'transactions' not in st.session_state:\n",
    "    st.session_state.transactions = pd.DataFrame(columns=[\n",
    "        '日期', '金额', '类别', '支付方式', '备注'\n",
    "    ])\n",
    "\n",
    "# 月光分析函数\n",
    "def analyze_moonlight(is_finance, is_accounting, age, gender, major):\n",
    "    def classification_advice():\n",
    "        if not is_accounting and not is_finance:\n",
    "            return \"非必要消费（特别是娱乐和服饰类）\"\n",
    "        elif is_accounting and not is_finance:\n",
    "            return \"理财工具的使用（如货币基金）\"\n",
    "        else:\n",
    "            return \"消费结构的优化（必要/非必要支出比）\"\n",
    "    \n",
    "    conclusion = f\"\"\"\n",
    "    ### 月光行为分析报告（基于您的画像）\n",
    "    - **基本特征**：{age}岁 {gender}性 {major}专业\n",
    "    - **财务习惯**：{'有' if is_finance else '无'}理财 | {'有' if is_accounting else '无'}记账\n",
    "    \n",
    "    📊 **研究发现**：\n",
    "    1. 您的月光风险主要与{'理财习惯' if is_finance else '消费结构'}相关\n",
    "    2. {'记账' if is_accounting else '不记账'}会使月光概率{'降低30%' if is_accounting else '增加45%'}\n",
    "    3. 建议关注{classification_advice()}\n",
    "    \"\"\"\n",
    "    st.sidebar.markdown(conclusion)\n",
    "\n",
    "# 侧边栏 - 用户信息\n",
    "with st.sidebar:\n",
    "    st.header(\"用户画像\")\n",
    "    gender = st.radio(\"性别\", ('男', '女', '其他'))\n",
    "    age = st.slider(\"年龄\", 18, 40, 20)\n",
    "    major = st.selectbox(\"专业\", ('理工', '文史', '经管', '艺术', '其他'))\n",
    "    \n",
    "    st.divider()\n",
    "    is_finance = st.checkbox(\"是否理财\")\n",
    "    is_accounting = st.checkbox(\"是否记账\")\n",
    "    \n",
    "    if st.button(\"生成月光分析报告\"):\n",
    "        analyze_moonlight(is_finance, is_accounting, age, gender, major)\n",
    "    \n",
    "    # 显示总消费\n",
    "    if not st.session_state.transactions.empty:\n",
    "        total_spending = st.session_state.transactions['金额'].sum()\n",
    "        st.metric(\"总消费\", f\"¥{total_spending:.2f}\")\n",
    "\n",
    "# 主界面\n",
    "st.title(\"💰 月光族记账本\")\n",
    "st.caption(\"研究显示：月光现象与理财/记账习惯相关性高于人口统计学因素\")\n",
    "\n",
    "# 记账表单\n",
    "with st.form(\"记账表单\", clear_on_submit=True):\n",
    "    cols = st.columns(3)\n",
    "    with cols[0]:\n",
    "        date = st.date_input(\"日期\", datetime.now())\n",
    "    with cols[1]:\n",
    "        amount = st.number_input(\"金额\", min_value=0.0, step=0.01, value=0.0)\n",
    "    with cols[2]:\n",
    "        category = st.selectbox(\"类别\", (\n",
    "            '餐饮', '服饰', '娱乐', '交通', '学习', '住宿', '医疗', '其他'\n",
    "        ))\n",
    "    \n",
    "    cols = st.columns(2)\n",
    "    with cols[0]:\n",
    "        payment = st.selectbox(\"支付方式\", ('支付宝', '微信', '现金', '银行卡'))\n",
    "    with cols[1]:\n",
    "        note = st.text_input(\"备注\")\n",
    "    \n",
    "    if st.form_submit_button(\"添加记录\"):\n",
    "        if amount <= 0:\n",
    "            st.error(\"金额必须大于零！\")\n",
    "        else:\n",
    "            new_record = pd.DataFrame([[\n",
    "                date, amount, category, payment, note\n",
    "            ]], columns=st.session_state.transactions.columns)\n",
    "            st.session_state.transactions = pd.concat(\n",
    "                [st.session_state.transactions, new_record],\n",
    "                ignore_index=True\n",
    "            )\n",
    "            st.success(\"记录已添加！\")\n",
    "\n",
    "# 显示数据表\n",
    "if not st.session_state.transactions.empty:\n",
    "    st.subheader(\"消费记录\")\n",
    "    st.dataframe(\n",
    "        st.session_state.transactions.sort_values('日期', ascending=False),\n",
    "        hide_index=True,\n",
    "        use_container_width=True\n",
    "    )\n",
    "    \n",
    "    # 消费分析\n",
    "    st.subheader(\"消费分析\")\n",
    "    tab1, tab2, tab3 = st.tabs([\"趋势分析\", \"类别分析\", \"月光预测\"])\n",
    "    \n",
    "    with tab1:\n",
    "        fig, ax = plt.subplots()\n",
    "        daily_spending = st.session_state.transactions.groupby('日期')['金额'].sum()\n",
    "        sns.lineplot(data=daily_spending, ax=ax)\n",
    "        ax.set_title(\"每日消费趋势\")\n",
    "        st.pyplot(fig)\n",
    "        plt.close(fig)  # 释放内存\n",
    "    \n",
    "    with tab2:\n",
    "        col1, col2 = st.columns(2)\n",
    "        with col1:\n",
    "            st.write(\"#### 消费类别占比\")\n",
    "            category_sum = st.session_state.transactions.groupby('类别')['金额'].sum()\n",
    "            st.dataframe(category_sum.sort_values(ascending=False))\n",
    "        \n",
    "        with col2:\n",
    "            fig, ax = plt.subplots()\n",
    "            category_sum.plot.pie(autopct=\"%.1f%%\", ax=ax)\n",
    "            st.pyplot(fig)\n",
    "            plt.close(fig)\n",
    "    \n",
    "    with tab3:\n",
    "        st.warning(\"正在开发中...\")\n",
    "        st.write(\"基于您的研究数据，将预测月光概率\")\n",
    "\n",
    "# 数据导出\n",
    "if not st.session_state.transactions.empty:\n",
    "    st.download_button(\n",
    "        label=\"导出消费记录\",\n",
    "        data=st.session_state.transactions.to_csv(index=False).encode('utf-8'),\n",
    "        file_name=f\"消费记录_{datetime.now().strftime('%Y%m%d')}.csv\",\n",
    "        mime=\"text/csv\"\n",
    "    )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
